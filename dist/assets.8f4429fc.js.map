{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","mute","muted","value","forEach","plugin","run","pause","togglePlay","paused","unmute","toggleMuted","AutoPlay","AutoPause","constructor","threshold","handlerIntersection","bind","handlerVisibility","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","buttonPlay","buttonMute","onclick","navigator","serviceWorker","register","catch","err","console","log"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MCAMqB,GFAGrB,ACAAoB,MCAT,CAAgB,CDAhB,GDAA,ACAoB,CDACnB,ACEpB,MDFD,EAA6B;AACzB,AEAAqB,EAAAA,KFAKpB,KAAL,CEAW,EFAED,CEAC,KFAK,CAACE,EAApB;AACA,AEAI,ADERiB,ODFShB,CCED,CCFKmB,ADEJjB,KDFL,GAAeL,CEAX,ADER,CAAmBa,ECFM,CDEzB,CDFyB,CAACV,CEAlB,ADEiB,MDFN,IAAkB,ACEFG,EDF/B,ICEqB,EAAkB;AEA3C,ADDQ,ADEJ,MEDE8B,AFCE,CAAC9B,ECFIiB,ECCF,EFCI,CEDDM,AFCEpB,KAAZ,EAAmB,CEDD,CAAC4B,KDDf,GAA2B,KCCrB,ADD0Bd,CCCH,OAAvB,CAAd,UDDmC,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AFAJ,AGEJ,ADDQ,ADEAlB,IAAAA,EEDFgC,CHFGlC,EECIqB,CDEC,CAAChB,KEDC,AFCR,GDHJ,AGEeoB,AFCI,IAAf,GCFA,CCCmB,CAACQ,CDDK,KAAKZ,OCCnB,CAAuB,SDDT,CAAuBD,GCCrC,CAAnB,ADDiC,CAA4B,IAA5B,CAAzB;AFAP,AGED,ADDK,ADEA,MEDCe,UAAU,GAAGV,QAAQ,CAACQ,aAAT,CAAuB,OAAvB,CAAnB;AAEA,MAAM/B,MAAM,GAAG,IAAIP,oBAAJ,CAAgB;AHF/BA,AGEiCG,ADF7BW,ADEAP,EEA6BJ,ADF7BW,ADEAP,EEA+B,CDF5B,CCE8B8B,ADF7B9B,EDEE,CAACC,EDFA,AGEoB,CHFnBF,AEAL,CDEH,CCFY,OFAhB,CAAsBD,YAAtB,GAAqC,YAAY;AAE7C,AGAwCD,ADDpC,ADEP,CALD,CEI4CA,MHAlCG,CGAyC,ADDtCA,ECCwC,CAAC,EHAtC,CEDR,CCCkDa,CHAvC,CEDGb,MAAd,SCC8C,EAAD,EAAe,IAAIc,kBAAJ,EAAf;AHC7Cb,AGDuB,ADAvB,CCAO,CAAf,EHCQA,IAAI,EAAE,AEDAmB,MFCM,EEDE,GFCGnB,AEDA,IFCL,AEDSoB,EFAV,kBEAM,CAAyB,KAAKJ,mBAA9B,EAAmD;AFEpEf,AEDIc,IFCJd,EEDIc,EFCA,EAAE,KEDO,ADENH,CDDK,CEDG,IFCEX,CEDGc,GFCR,EAFD;AAGXrB,AGFRqC,ADD4E,IFGpErC,CEHiB,CAAjB,GFGK,CGFH,CHEK,AGFJuC,KHESvC,EGFpB,GHDmB,AGCE,MAAMK,MAAM,CAACS,UAAP,EAA3B;ADGQW,IAAAA,QAAQ,CAACE,OAAT,CAAiBtB,MAAM,CAACL,KAAxB,EANQ,CAQR;AFFA,AGFRsC,ADKQ,QFHI9B,EGFF,CAAC+B,EHEH,GAAY,EGFpB,GAAqB,MAAMlC,MAAM,CAACY,WAAP,EAA3B;AHGY,aAAO,KAAKjB,KAAL,CAAWQ,KAAlB;AACH,AGDT,ADGQoB,ICHJ,ADGIA,CFRW,OEQH,CAACC,UCHMW,MDGf,CAA0B,ECHlC,EAAkC,cDG1B,EAA8C,KAAKhB,iBAAnD;ACFJgB,ADGC,ECHDA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiDC,GAAG,IAAI;AHCpD,AGAAC,IAAAA,IHAIrC,GGAG,CAACsC,CHAR,CAAUrC,CGAV,CAAYmC,GHAZ,AGAA,EHAiB;AACb,AGAP,ADGDtB,EAAAA,CCLA,QHEatB,KAAL,CAAWQ,IEGA,CFHX,AEGYsB,GFHOrB,IEGR,CFHX,CEGqB;AFFxB,AGAR,ADGO,UAAMsB,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB;AACA,UAAME,SAAS,GAAGD,KAAK,CAACE,iBAAN,IAA2B,KAAKZ,SAAlD;AFbW,GAAf;AAYA,AEEI,OFFCnB,CEEG8B,MFFR,CAAatB,EEET,EAAe,GFFnB,CAAqBC,MAAM,IAAI;AAC3BA,AEEI,IFFJA,MAAM,CAACC,AEEEP,GFFT,CAAWA,EEEP,CAAYL,GFFhB,EEEI,CAAkBM,IAAlB;AFDP,AEEI,GFJL,EEEI,MAEO;AFDd,AEEW,CFnBZ,UEmBiBD,MAAL,CAAYL,KAAZ,CAAkBa,KAAlB;AACH;AFDTf,AEEK,WFFM,CAACM,SAAZ,CAAsBE,IAAtB,GAA6B,YAAY;AACrC,OAAKN,KAAL,CAAWM,IAAX;AACH,AECGkB,CFHJ,CEGIA,iBAAiB,GAAG;AAChB,UAAMQ,SAAS,GAAGJ,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFARpC,WAAW,CAACM,SAAZ,CAAsBS,KAAtB,GAA8B,YAAY;AACtC,AEAI,OFACb,CEAGgC,IFAR,CAAWnB,IEAP,CFAJ,CEAmB;AFCtB,AEAW,CFFZ,UEEiBR,MAAL,CAAYL,KAAZ,CAAkBM,IAAlB;AACH,KAFD,MAEO;AFCfR,AEAY,WFAD,AEAMO,CFALD,KEAA,CAAYJ,GFAxB,CAAsBc,CEAV,CAAkBD,KAAlB,GFAZ,GAAmC,YAAY;AAC3C,AEAK,OFAAb,KAAL,CAAWe,MAAX,GAAoB,KAAKT,IAAL,EAApB,GAAkC,KAAKO,KAAL,EAAlC;AACH,AEAI,CFFL;;AAIAf,AErCgB,WFqCL,CAACM,SAAZ,CAAsBG,IAAtB,GAA6B,YAAY;AACrC,OAAKP,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACH,CAFD,cECeW;;AFGfrB,WAAW,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAY;AACvC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACH,CAFD;;AAIAV,WAAW,CAACM,SAAZ,CAAsBa,WAAtB,GAAoC,YAAY;AAC5C,OAAKjB,KAAL,CAAWQ,KAAX,GAAmB,KAAKQ,MAAL,EAAnB,GAAmC,KAAKT,IAAL,EAAnC;AACH,CAFD;;eAIeT","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n    this._initPlugins();\r\n}\r\n\r\nMediaPlayer.prototype._initPlugins = function () {\r\n\r\n    const player = {\r\n        play: () => this.play(),\r\n        mute: () => this.mute(),\r\n        media: this.media,\r\n        get muted() {\r\n            return this.media.muted\r\n        },\r\n        set muted(value) {\r\n            this.media.muted = value\r\n        }\r\n    }\r\n\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player)\r\n    });\r\n}\r\n\r\nMediaPlayer.prototype.play = function () {\r\n    this.media.play();\r\n};\r\n\r\nMediaPlayer.prototype.pause = function () {\r\n    this.media.pause();\r\n};\r\n\r\nMediaPlayer.prototype.togglePlay = function () {\r\n    this.media.paused ? this.play() : this.pause()\r\n}\r\n\r\nMediaPlayer.prototype.mute = function () {\r\n    this.media.muted = true\r\n}\r\n\r\nMediaPlayer.prototype.unmute = function () {\r\n    this.media.muted = false\r\n}\r\n\r\nMediaPlayer.prototype.toggleMuted = function () {\r\n    this.media.muted ? this.unmute() : this.mute()\r\n}\r\n\r\nexport default MediaPlayer","function AutoPlay() {\r\n\r\n}\r\n\r\nAutoPlay.prototype.run = function (player) {\r\n    if (!player.muted) {\r\n        player.muted = true;\r\n    }\r\n    player.play();\r\n}\r\n\r\nexport default AutoPlay","class AutoPause {\r\n    constructor() {\r\n        this.threshold = 0.25\r\n        this.handlerIntersection = this.handlerIntersection.bind(this)\r\n        this.handlerVisibility = this.handlerVisibility.bind(this)\r\n    }\r\n    run(player) {\r\n        this.player = player\r\n        const observer = new IntersectionObserver(this.handlerIntersection, {\r\n            threshold: this.threshold,\r\n\r\n        })\r\n        observer.observe(player.media)\r\n\r\n        // VisibilityChange - Nos sirve para saber si el Tab donde estqa nuestra pagina es el que esta observando el usuario,\r\n        // es decir, es el Tab que esta hasta el frente\r\n        document.addEventListener(\"visibilitychange\", this.handlerVisibility)\r\n    }\r\n\r\n    handlerIntersection(entries) {\r\n        const entry = entries[0]\r\n        const isVisible = entry.intersectionRatio >= this.threshold\r\n        if (isVisible) {\r\n            this.player.media.play()\r\n        } else {\r\n            this.player.media.pause()\r\n        }\r\n    }\r\n    handlerVisibility() {\r\n        const isVisible = document.visibilityState === \"visible\"\r\n        if (isVisible) {\r\n            this.player.media.play()\r\n        } else {\r\n            this.player.media.pause()\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutoPause","import MediaPlayer from \"./MediaPlayer.js\"\r\nimport AutoPlay from \"./plugins/AutoPlay.js\"\r\nimport AutoPause from \"./plugins/AutoPause.js\"\r\n\r\nconst video = document.querySelector(\"video\")\r\nconst buttonPlay = document.querySelector(\".play-pause\")\r\nconst buttonMute = document.querySelector(\".mute\")\r\n\r\nconst player = new MediaPlayer({ el: video, plugins: [new AutoPlay, new AutoPause] })\r\nbuttonPlay.onclick = () => player.togglePlay()\r\nbuttonMute.onclick = () => player.toggleMuted()\r\n\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.register(\"/sw.js\").catch(err => {\r\n        console.log(err)\r\n    })\r\n}"]}